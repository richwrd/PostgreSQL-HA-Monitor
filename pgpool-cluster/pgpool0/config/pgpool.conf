# ==============================
# Configuração de login
# ==============================

sr_check_user = 'replicator'
sr_check_password = 'r3pl1c4#2025!'
sr_check_database = 'postgres'

# ============================
# Configuração Gerais
# ============================
# Não alterar

pool_passwd = '/etc/pgpool2/pool_passwd'
pool_hba_file = '/etc/pgpool2/pool_hba.conf'
enable_pool_hba = off

# Permite login dos usuarios sem estár no pool_passwd (Só funciona com pool_hba off)
allow_clear_text_frontend_auth=on

backend_status_file = '/var/log/postgresql/pgpool_status'

unix_socket_dir = '/var/run/pgpool2/unix'
pcp_socket_dir = '/var/run/pgpool2/pcp'

allow_sql_comments = on
authentication_timeout = 60

ignore_leading_white_space = on 

max_pool=1000

# No Pgpool-II, os processos filhos (child processes) são responsáveis por gerenciar
# conexões entre os clientes (aplicações) e o banco de dados PostgreSQL.
# O Pgpool-II não conecta cada cliente diretamente ao PostgreSQL;
# em vez disso, ele mantém um conjunto de conexões pré-abertas para otimizar a
# performance e reduzir a sobrecarga da criação de novas conexões.
num_init_children=100
connection_cache=on
# ============================
# PGPool PCP
# ============================
listen_addresses = '*'
port = 5430

pcp_listen_addresses = '*'
# NAO ALTERAR
pcp_port = 9898

listen_backlog_multiplier = 2
serialize_accept = off


# ============================
# Configuração do BACKEND
# ============================

load_balance_mode = on

backend_clustering_mode = 'streaming_replication'

backend_hostname0 = 'postgresql0'
backend_port0 = '5433'
backend_weight0 = 0 
backend_flag0 = 'ALLOW_TO_FAILOVER'

backend_hostname1 = 'postgresql1'  
backend_port1 = '5434'
backend_weight1 = 2
backend_flag1 = 'ALLOW_TO_FAILOVER'

# ============================
# Configuração do Watchdog
# ============================

pgpool_node_id = 0

# # Ativar Watchdog
use_watchdog = on

# # Configurações do pgpool0
hostname0 = 'postgresql0' # Substitua pelo IP da máquina
wd_port0  = 9000
pgpool_port0 = 5430

# Configurações do pgpool1
hostname1 = 'postgresql1' # Substitua pelo IP da máquina
wd_port1  = 9001
pgpool_port1 = 5431

# ============================
# Configuração do FAILOVER / FAILBACK (Atualmente o patroni está responsavel)
# ============================
failover_on_backend_error = on
failover_command = '/bin/bash /etc/pgpool2/failover.sh %d %h %p %D %H %P %r %R'

# Este script garante que o PgPool-II sempre aponte para o nó PostgreSQL correto (primary) eleito pelo Patroni, mesmo em um cluster de 2 nós, sem conflitos.
follow_master_command = '/bin/bash /etc/pgpool2/follow_master.sh'


allow_multiple_failover_requests_from_node = off
failover_when_quorum_exists = off
failover_require_consensus = off

wd_escalation_command = ''
wd_de_escalation_command = ''

health_check_period = 5 
health_check_timeout = 10
health_check_max_retries = 2
health_check_retry_delay = 1
health_check_user = 'monitor'     # Usuário com permissões
health_check_password = 'm$$n3yt0r4'
health_check_database = 'postgres'

# ============================ 
# Configuração do Lifecheck Watchdog

# Checa a conexão com outro pgpool (heartbeat ou query)
wd_lifecheck_method = 'heartbeat'

wd_priority = 0 # Prioridade do nó
wd_life_point = 3 # Número de tentativas para verificar o nó
wd_interval = 10  # Tempo de espera para verificar o nó

wd_heartbeat_keepalive = 2 # Tempo de espera para o heartbeat
wd_heartbeat_deadtime = 10 # Tempo de espera para considerar o nó morto

heartbeat_hostname0 = 'postgresql0'
heartbeat_port0 = 9694
heartbeat_device0 = 'wlp0s20f3' # interface de rede (ip a)

heartbeat_hostname1 = 'postgresql1'
heartbeat_port1 = 9695
heartbeat_device1 = 'wlp0s20f3' # interface de rede (ip a)


# ============================
# Configuração do Virtual IP (VIP) (Não vamos utilizar.)
# ============================

# delegate_IP = ''  # Ou remova essa linha
# if_cmd_path = '/sbin'
# if_up_cmd = ''  # Sem configuração de VIP
# if_down_cmd = ''
# arping_cmd = ''

# ============================
# Configuração do LOG Path
# https://www.pgpool.net/docs/pgpool-II-4.3.4/en/html/runtime-config-logging.html
# ============================

logging_collector = on  # Ativa a coleta de logs

log_destination = 'stderr' 
log_directory = '/etc/pgpool2/logs'  # Diretório onde os logs serão armazenados
log_filename = 'pgpool.log'  # Nome do arquivo de log

log_pcp_processes = on
client_min_messages = log  # Registre mensagens de log de nível mínimo para o cliente

log_hostname = off  # Registre o nome do host do cliente em vez do endereço IP.
log_statement = off  # Desativa o log de declarações SQL
log_per_node_statement = off  # Registre cada instrução SQL para cada nó do BD separadamente
log_connections = off  # Desativa o log de conexões



