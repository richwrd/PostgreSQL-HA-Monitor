scope: pg-cluster
namespace: /db/
name: postgresql2

restapi:
  listen: "0.0.0.0:8010"
  connect_address: "postgresql2:8010"
  authentication:
    username: admin
    password: strongpassword
  certfile: null
  keyfile: null
  cafile: null

etcd3:
  hosts: etcd:2379

postgresql:
  listen: "0.0.0.0:5435"
  connect_address: "postgresql2:5435"
  data_dir: "/var/lib/postgresql/data/pgdata"
  bin_dir: "/usr/lib/postgresql/17/bin/"
  authentication:
    superuser:
      username: "postgres"
      password: "postgres"
    replication:
      username: "replicator"
      password: "r3pl1c4#2025!"
    monitoring:
      username: "monitor"
      password: "m$$n3yt0r4"
  parameters:
    use_slots: true
    wal_level: replica
    max_replication_slots: 5
    max_wal_size: 16GB # Para evitar checkpoints excessivos
    min_wal_size: 2GB # Mantém mais WALs armazenados
    max_wal_senders: 10
    wal_compression: on # Reduz uso de I/O do WAL
    max_wal_senders: 10
    wal_writer_delay: 500ms # Melhora latência de escrita
    synchronous_commit: on
    synchronous_standby_names: "*"
    hot_standby: on
    archive_mode: on
    archive_command: "/bin/true"
    checkpoint_timeout: 15min # Intervalo maior para evitar I/O excessivo
    checkpoint_completion_target: 0.9 # Distribui gravação do checkpoint
    max_worker_processes: 40
    shared_buffers: 2GB
    work_mem: 128MB
    maintenance_work_mem: 512MB
    effective_cache_size: 4GB
    random_page_cost: 1.1
    effective_io_concurrency: 200
  pg_hba:
    - local all all md5
    - host all all 0.0.0.0/0 md5 # (ouve local)
    - host replication replicator 0.0.0.0/0 md5 # REMOVER EM PRODUCAO

healthcheck:
  enabled: true # Habilita o health check
  interval: 10 # Intervalo em segundos entre as verificações de saúde
  retries: 3 # Número de tentativas antes de considerar o nó como não saudável
  timeout: 5 # Tempo máximo (em segundos) para aguardar uma resposta do health check

watchdog:
  enabled: true
  ttl: 10
  failover_timeout: 30
  node_name: postgresql2
  master_start_timeout: 300
  synchronous_mode: false
  script_max_timeout: 30
  script_timeout: 10
  loop_wait: 10
  retry_timeout: 10
  maximum_lag_on_failover: 1048576

log:
  level: DEBUG
  dir: /var/log/patroni
  file_num: 5
  loggers:
    patroni: DEBUG
    urllib3: WARNING
    requests: WARNING
    asyncio: WARNING
  format: "%(asctime)s %(levelname)s: %(message)s"
  # Ativa o log para o console também
  stdout_handler:
    enabled: true
    level: DEBUG
