services:
  # Serviço etcd (backend para o Patroni)
  etcd:
    image: quay.io/coreos/etcd:v3.5.0
    hostname: etcd
    container_name: etcd
    environment:
      - ETCD_NAME=etcd1
      - ETCD_DATA_DIR=/etcd-data
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
      - ETCD_INITIAL_CLUSTER=etcd1=http://etcd:2380
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd:2380
    ports:
      - "2379:2379" # Porta para clientes
      # - "2380:2380" # Porta para comunicação entre nós etcd (se tiver cluster)
    networks:
      - postgresql_network

  postgresql1:
    build:
      context: ./postgresql1/
      dockerfile: ./Dockerfile
    hostname: postgresql1
    container_name: postgresql1
    privileged: true
    volumes:
      - postgres-data1:/var/lib/postgresql/data
    ports:
      - "5433:5433" # Porta do PostgreSQL
      - "8008:8008" # Porta da API REST do Patroni
    depends_on:
      - etcd
    networks:
      - postgresql_network
      - grafana_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8008/health"]
      interval: 10s
      timeout: 5s
      retries: 3


  postgresql2:
    build:
      context: ./postgresql2/
      dockerfile: ./Dockerfile
    hostname: postgresql2
    container_name: postgresql2
    privileged: true
    volumes:
      - postgres-data2:/var/lib/postgresql/data
    ports:
      - "5434:5434" # Porta do PostgreSQL
      - "8009:8009" # Porta da API REST do Patroni
    depends_on:
      - etcd
      - postgresql1
    networks:
      - postgresql_network
      - grafana_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8009/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  pgpool:
    build:
      context: ./pgpool/
      dockerfile: ./Dockerfile
      args:
        SERVER_IP: ${SERVER_IP}
        PGPOOL_PORT: ${PGPOOL_PORT}
        PGPOOL_BACKEND_PORT: ${PGPOOL_BACKEND_PORT}
        PGPOOL_BACKEND_PORT2: ${PGPOOL_BACKEND_PORT2}
        # PGPOOL_BACKEND_PORT3: ${PGPOOL_BACKEND_PORT3}
    hostname: pgpool
    container_name: pgpool
    # restart: always
    ports:
      - "${PGPOOL_PUBLISHED_PORT:-5432}:5432"
      # - "${PGPOOL_PCP_PORT:-9898}:9898" # PCP port (UNIX, not TCP)
      - "${PGPOOL_METRICS_PORT:-9719}:9719"
    depends_on:
      postgresql1:
        condition: service_healthy
      postgresql2:
        condition: service_healthy
    volumes:
      - ./pgpool/config/pool_hba.conf:/etc/pgpool2/pool_hba.conf  
      - ./pgpool/config/pcp.conf:/etc/pgpool2/pcp.conf  
      - ./pgpool/config/pgpool.conf:/etc/pgpool2/pgpool.conf  
      - ./pgpool/config/pool_passwd:/etc/pgpool2/pool_passwd
    networks:
      - postgresql_network
      - grafana_network
  postgresql1-exporter:
    build:
      context: ./postgres-exporter
      dockerfile: ./Dockerfile
    image: quay.io/prometheuscommunity/postgres-exporter
    container_name: postgresql1-exporter
    hostname: postgresql1-exporter
    environment:
      - DATA_SOURCE_URI=postgresql://postgres:postgres@192.168.1.5:5433/postgres?sslmode=disable
    volumes:
      - ./postgresql1/postgres-exporter.yml:/postgres-exporter.yml
    depends_on:
      postgresql1:
        condition: service_healthy
    ports:
      - "9187:9187"
    networks:
      - postgresql_network
      - grafana_network
      
  grafana-agent:
    image: grafana/agent:latest
    container_name: grafana-agent
    volumes:
      - ./prometheus/prometheus.yml:/etc/agent/config.yaml
    command:
      - "--config.file=/etc/agent/config.yaml"
    ports:
      - "9090:9090"  # You might want to adjust this port based on your agent configuration
    depends_on:
      - etcd
      - postgresql1
      - postgresql2
      - postgresql1-exporter
      - postgresql2-exporter
      - pgpool
    networks:
      - postgresql_network
      - grafana_network

  mimir:
    image: grafana/mimir:latest
    container_name: mimir
    command: 
      - "-config.file=/etc/mimir/config.yaml"
    volumes:
      - ./grafana-mimir/config.yaml:/etc/mimir/config.yaml
      - mimir-data:/data
    ports:
      - "9009:9009"  # Mimir API port
    depends_on:
      - etcd
    networks:
      - postgresql_network
      - grafana_network 

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - mimir
      - grafana-agent
      - postgresql1-exporter
      - postgresql2-exporter
      - pgpool
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    networks:
      - postgresql_network
      - grafana_network 

volumes:
  postgres-data1:
  postgres-data2:
  grafana-data:
  mimir-data:
  
networks:
  postgresql_network:
    driver: bridge
  grafana_network:
    driver: bridge